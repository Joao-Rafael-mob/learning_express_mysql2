// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstname String
  surname   String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Product {
  id                Int               @id @default(autoincrement())
  enabled           Boolean?          @default(false)
  name              String
  slug              String         
  useInMenu         Boolean?          @default(false)
  stock             Int?              @default(0)
  description       String?
  price             Float
  priceWithDiscount Float
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  ProductImage      ProductImage[]
  ProductOption     ProductOption[]
  ProductCategory   ProductCategory[]

  @@map("products")
}

model Category {
  id              Int               @id @default(autoincrement())
  name            String
  slug            String           
  useInMenu       Boolean?          @default(false)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ProductCategory ProductCategory[]

  @@map("categories")
}

model ProductCategory {
  productId  Int
  categoryId Int

  product  Product  @relation(fields: [productId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
  @@map("product_categories")
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  productId Int
  enabled   Boolean? @default(false)
  path      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])

  @@map("product_images")
}

model ProductOption {
  id        Int       @id @default(autoincrement())
  productId Int
  title     String
  shape     Shape     @default(SQUARE)
  radius    Int?      @default(0)
  type      InputType @default(TEXT)
  values    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  product Product @relation(fields: [productId], references: [id])

  @@map("product_options")
}

enum Shape {  
  SQUARE
  CIRCLE
}

enum InputType {
  TEXT
  COLOR
}
